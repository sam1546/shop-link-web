{"ast":null,"code":"import { routerTransition } from '../../router.animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../shared/modules/page-header/page-header.component\";\nimport * as i2 from \"ng2-charts\";\nexport let ChartsComponent = /*#__PURE__*/(() => {\n  class ChartsComponent {\n    constructor() {\n      // bar chart\n      this.barChartOptions = {\n        scaleShowVerticalLines: false,\n        responsive: true\n      };\n      this.barChartLabels = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n      this.barChartData = [{\n        data: [65, 59, 80, 81, 56, 55, 40],\n        label: 'Series A'\n      }, {\n        data: [28, 48, 40, 19, 86, 27, 90],\n        label: 'Series B'\n      }]; // Doughnut\n\n      this.doughnutChartLabels = ['Download Sales', 'In-Store Sales', 'Mail-Order Sales'];\n      this.doughnutChartData = [350, 450, 100]; // Radar\n\n      this.radarChartLabels = ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'];\n      this.radarChartData = [{\n        data: [65, 59, 90, 81, 56, 55, 40],\n        label: 'Series A'\n      }, {\n        data: [28, 48, 40, 19, 96, 27, 100],\n        label: 'Series B'\n      }]; // Pie\n\n      this.pieChartLabels = ['Download Sales', 'In-Store Sales', 'Mail Sales'];\n      this.pieChartData = [300, 500, 100]; // PolarArea\n\n      this.polarAreaChartLabels = ['Download Sales', 'In-Store Sales', 'Mail Sales', 'Telesales', 'Corporate Sales'];\n      this.polarAreaChartData = [300, 500, 100, 40, 120]; // lineChart\n\n      this.lineChartData = [{\n        data: [65, 59, 80, 81, 56, 55, 40],\n        label: 'Series A'\n      }, {\n        data: [28, 48, 40, 19, 86, 27, 90],\n        label: 'Series B'\n      }, {\n        data: [18, 48, 77, 9, 100, 27, 40],\n        label: 'Series C'\n      }];\n      this.lineChartLabels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n      this.lineChartOptions = {\n        responsive: true\n      };\n      this.lineChartColors = [{\n        // grey\n        backgroundColor: 'rgba(148,159,177,0.2)',\n        borderColor: 'rgba(148,159,177,1)',\n        pointBackgroundColor: 'rgba(148,159,177,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n      }, {\n        // dark grey\n        backgroundColor: 'rgba(77,83,96,0.2)',\n        borderColor: 'rgba(77,83,96,1)',\n        pointBackgroundColor: 'rgba(77,83,96,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(77,83,96,1)'\n      }, {\n        // grey\n        backgroundColor: 'rgba(148,159,177,0.2)',\n        borderColor: 'rgba(148,159,177,1)',\n        pointBackgroundColor: 'rgba(148,159,177,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n      }];\n    } // events\n\n\n    chartClicked(e) {// console.log(e);\n    }\n\n    chartHovered(e) {// console.log(e);\n    }\n\n    randomize() {\n      // Only Change 3 values\n      const data = [Math.round(Math.random() * 100), 59, 80, Math.random() * 100, 56, Math.random() * 100, 40];\n      const clone = JSON.parse(JSON.stringify(this.barChartData));\n      clone[0].data = data;\n      this.barChartData = clone;\n      /**\n       * (My guess), for Angular to recognize the change in the dataset\n       * it has to change the dataset variable directly,\n       * so one way around it, is to clone the data, change it and then\n       * assign it;\n       */\n    }\n\n    ngOnInit() {\n      this.barChartType = 'bar';\n      this.barChartLegend = true;\n      this.doughnutChartType = 'doughnut';\n      this.radarChartType = 'radar';\n      this.pieChartType = 'pie';\n      this.polarAreaLegend = true;\n      this.polarAreaChartType = 'polarArea';\n      this.lineChartLegend = true;\n      this.lineChartType = 'line';\n    }\n\n  }\n\n  ChartsComponent.ɵfac = function ChartsComponent_Factory(t) {\n    return new (t || ChartsComponent)();\n  };\n\n  ChartsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChartsComponent,\n    selectors: [[\"app-charts\"]],\n    decls: 44,\n    vars: 27,\n    consts: [[3, \"heading\", \"icon\"], [1, \"row\"], [1, \"col\", \"col-sm-6\"], [1, \"card\", \"mb-3\"], [1, \"card-header\"], [1, \"card-body\"], [\"baseChart\", \"\", 3, \"chartType\", \"datasets\", \"labels\", \"legend\", \"options\", \"chartClick\", \"chartHover\"], [1, \"card-footer\"], [1, \"btn\", \"btn-info\", \"btn-sm\", 3, \"click\"], [\"baseChart\", \"\", \"height\", \"180px\", 3, \"chartType\", \"data\", \"labels\", \"chartClick\", \"chartHover\"], [\"baseChart\", \"\", \"height\", \"150px\", 3, \"chartType\", \"datasets\", \"labels\", \"chartClick\", \"chartHover\"], [\"baseChart\", \"\", \"height\", \"150px\", 3, \"chartType\", \"data\", \"labels\", \"chartClick\", \"chartHover\"], [\"baseChart\", \"\", \"height\", \"130px\", 3, \"chartType\", \"data\", \"labels\", \"legend\", \"chartClick\", \"chartHover\"], [\"baseChart\", \"\", \"height\", \"130\", 3, \"chartType\", \"colors\", \"datasets\", \"labels\", \"legend\", \"options\", \"chartClick\", \"chartHover\"]],\n    template: function ChartsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelement(1, \"app-page-header\", 0);\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtext(6, \" Bar Chart \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelementStart(8, \"canvas\", 6);\n        i0.ɵɵlistener(\"chartClick\", function ChartsComponent_Template_canvas_chartClick_8_listener($event) {\n          return ctx.chartClicked($event);\n        })(\"chartHover\", function ChartsComponent_Template_canvas_chartHover_8_listener($event) {\n          return ctx.chartHovered($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function ChartsComponent_Template_button_click_10_listener() {\n          return ctx.randomize();\n        });\n        i0.ɵɵtext(11, \"Update\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 2);\n        i0.ɵɵelementStart(13, \"div\", 3);\n        i0.ɵɵelementStart(14, \"div\", 4);\n        i0.ɵɵtext(15, \" Doughnut Chart \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 5);\n        i0.ɵɵelementStart(17, \"canvas\", 9);\n        i0.ɵɵlistener(\"chartClick\", function ChartsComponent_Template_canvas_chartClick_17_listener($event) {\n          return ctx.chartClicked($event);\n        })(\"chartHover\", function ChartsComponent_Template_canvas_chartHover_17_listener($event) {\n          return ctx.chartHovered($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 1);\n        i0.ɵɵelementStart(19, \"div\", 2);\n        i0.ɵɵelementStart(20, \"div\", 3);\n        i0.ɵɵelementStart(21, \"div\", 4);\n        i0.ɵɵtext(22, \" Radar Chart \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 5);\n        i0.ɵɵelementStart(24, \"canvas\", 10);\n        i0.ɵɵlistener(\"chartClick\", function ChartsComponent_Template_canvas_chartClick_24_listener($event) {\n          return ctx.chartClicked($event);\n        })(\"chartHover\", function ChartsComponent_Template_canvas_chartHover_24_listener($event) {\n          return ctx.chartHovered($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 2);\n        i0.ɵɵelementStart(26, \"div\", 3);\n        i0.ɵɵelementStart(27, \"div\", 4);\n        i0.ɵɵtext(28, \" Pie Chart \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 5);\n        i0.ɵɵelementStart(30, \"canvas\", 11);\n        i0.ɵɵlistener(\"chartClick\", function ChartsComponent_Template_canvas_chartClick_30_listener($event) {\n          return ctx.chartClicked($event);\n        })(\"chartHover\", function ChartsComponent_Template_canvas_chartHover_30_listener($event) {\n          return ctx.chartHovered($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 1);\n        i0.ɵɵelementStart(32, \"div\", 2);\n        i0.ɵɵelementStart(33, \"div\", 3);\n        i0.ɵɵelementStart(34, \"div\", 4);\n        i0.ɵɵtext(35, \" Polar Area Chart \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\", 5);\n        i0.ɵɵelementStart(37, \"canvas\", 12);\n        i0.ɵɵlistener(\"chartClick\", function ChartsComponent_Template_canvas_chartClick_37_listener($event) {\n          return ctx.chartClicked($event);\n        })(\"chartHover\", function ChartsComponent_Template_canvas_chartHover_37_listener($event) {\n          return ctx.chartHovered($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 2);\n        i0.ɵɵelementStart(39, \"div\", 3);\n        i0.ɵɵelementStart(40, \"div\", 4);\n        i0.ɵɵtext(41, \" Line Chart \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"div\", 5);\n        i0.ɵɵelementStart(43, \"canvas\", 13);\n        i0.ɵɵlistener(\"chartClick\", function ChartsComponent_Template_canvas_chartClick_43_listener($event) {\n          return ctx.chartClicked($event);\n        })(\"chartHover\", function ChartsComponent_Template_canvas_chartHover_43_listener($event) {\n          return ctx.chartHovered($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"@routerTransition\", undefined);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"heading\", \"Charts\")(\"icon\", \"fa-bar-chart-o\");\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"chartType\", ctx.barChartType)(\"datasets\", ctx.barChartData)(\"labels\", ctx.barChartLabels)(\"legend\", ctx.barChartLegend)(\"options\", ctx.barChartOptions);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"chartType\", ctx.doughnutChartType)(\"data\", ctx.doughnutChartData)(\"labels\", ctx.doughnutChartLabels);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"chartType\", ctx.radarChartType)(\"datasets\", ctx.radarChartData)(\"labels\", ctx.radarChartLabels);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"chartType\", ctx.pieChartType)(\"data\", ctx.pieChartData)(\"labels\", ctx.pieChartLabels);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"chartType\", ctx.polarAreaChartType)(\"data\", ctx.polarAreaChartData)(\"labels\", ctx.polarAreaChartLabels)(\"legend\", ctx.polarAreaLegend);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"chartType\", ctx.lineChartType)(\"colors\", ctx.lineChartColors)(\"datasets\", ctx.lineChartData)(\"labels\", ctx.lineChartLabels)(\"legend\", ctx.lineChartLegend)(\"options\", ctx.lineChartOptions);\n      }\n    },\n    directives: [i1.PageHeaderComponent, i2.BaseChartDirective],\n    styles: [\"\"],\n    data: {\n      animation: [routerTransition()]\n    }\n  });\n  return ChartsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}