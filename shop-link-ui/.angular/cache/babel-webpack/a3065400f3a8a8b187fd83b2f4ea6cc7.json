{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { Response, Http } from '@angular/http';\nimport { map, catchError } from 'rxjs/operators';\nimport * as glob from '../models/global';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/http\";\nexport let DashboardService = /*#__PURE__*/(() => {\n  class DashboardService {\n    constructor(http, httpd) {\n      this.http = http;\n      this.httpd = httpd;\n    }\n\n    findDB() {\n      return this.httpd.get(glob.devApiUrl + \"Dashboard/findDB\").pipe(map(response => {\n        return response.json();\n      }), catchError(error => {\n        return \"error\";\n      }));\n    }\n\n    GetDashboardData(mirno, plantCode) {\n      console.log(this.mirno);\n      return this.http.get(glob.devApiUrl + \"Dashboard/loadGridData\", {\n        params: {\n          mirno: mirno,\n          plantCode: plantCode\n        }\n      }).pipe(map(response => {\n        return response.json();\n      }), catchError(error => {\n        return \"error\";\n      }));\n    }\n\n    GetWorkCenter(group) {\n      try {\n        return this.httpd.get(glob.devApiUrl + \"Dashboard/loadWorkCenters\", {\n          params: {\n            group: group\n          }\n        }).pipe(map(response => {\n          return response.json();\n        }));\n      } catch (_a) {\n        var res = {\n          code: 404,\n          error: \"connection error\"\n        };\n        return res;\n      }\n    }\n\n    GetGroups() {\n      return this.httpd.get(glob.devApiUrl + \"Dashboard/loadGroups\").pipe(map(response => {\n        return response.json();\n      }));\n    }\n\n  }\n\n  DashboardService.ɵfac = function DashboardService_Factory(t) {\n    return new (t || DashboardService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Http));\n  };\n\n  DashboardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DashboardService,\n    factory: DashboardService.ɵfac,\n    providedIn: 'root'\n  });\n  return DashboardService;\n})();","map":null,"metadata":{},"sourceType":"module"}