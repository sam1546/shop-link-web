{"ast":null,"code":"import { routerTransition } from '../../router.animations';\nimport { ModalDismissReasons, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClient } from '@angular/common/http'; // var dt = require( 'datatables.net' )();\n\nimport { Router } from '@angular/router';\nimport { isNumeric } from 'rxjs/internal-compatibility';\nimport { ToastrManager } from 'ng6-toastr-notifications';\nimport { DashboardService } from '../../shared/services/dashboard.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../shared/services/dashboard.service\";\nimport * as i5 from \"ng6-toastr-notifications\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/common\";\n\nfunction DashboardComponent_option_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 64);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r4.groupId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r4.groupId, \" \");\n  }\n}\n\nfunction DashboardComponent_option_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 65);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", option_r5.workCenterCode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r5.workCenterCode, \" \");\n  }\n}\n\nfunction DashboardComponent_option_65_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 64);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r6, \" \");\n  }\n}\n\nfunction DashboardComponent_tbody_205_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 30);\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"td\");\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"td\");\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"td\");\n    i0.ɵɵtext(26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"td\");\n    i0.ɵɵtext(28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"td\");\n    i0.ɵɵtext(30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"td\");\n    i0.ɵɵtext(32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"td\");\n    i0.ɵɵtext(34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"td\");\n    i0.ɵɵtext(36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"td\");\n    i0.ɵɵtext(38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r8.rsNo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r8.item_No);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r8.mirNo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r8.workCenter);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r8.section);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r8.opStatus);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r8.billable_Lot);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r8.qty);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r8.length);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r8.wt_Pcs);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r8.releasedDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r8.totalWt);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r8.rackDetails);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r8.oprpCs);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r8.tot_OPS);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r8.planningShift);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r8.planningDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r8.runTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r8.status);\n  }\n}\n\nfunction DashboardComponent_tbody_205_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\", 66);\n    i0.ɵɵtemplate(1, DashboardComponent_tbody_205_tr_1_Template, 39, 19, \"tr\", 67);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.pddetails);\n  }\n}\n\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\n\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(modalService, http, router, dashboardservice, notificationMessages) {\n      this.modalService = modalService;\n      this.http = http;\n      this.router = router;\n      this.dashboardservice = dashboardservice;\n      this.notificationMessages = notificationMessages;\n      this.waitSpinner = true;\n      this.showSpinner = false;\n      this.barcode = '';\n      this.values = [];\n      this.txtAckMirno = '';\n      this.txtweightinton = '';\n      this.txttotalsetup = '';\n      this.txttotaloptions = '';\n      this.txttheortime = '';\n      this.loggedInUserName = '';\n      this.plantCode = localStorage.getItem(\"plantcode\");\n      this.poType = '';\n      this.optionSelectedGroup = 'null';\n      this.groups = [];\n      this.workCenter = [];\n      this.optionSelectedWorkCenter = 'null';\n      this.SECTION_TYPE = [\"ShiftA\", \"ShiftB\", \"ShiftC\", \"ShiftD\"];\n      this.optionSelectedShift = \"null\";\n      this.pddetails = [];\n      this.rdrFicep = false;\n      this.rdrVernet = false;\n      this.rdrDrilling = false;\n      this.radioButton1 = false;\n      this.radioButton2 = false;\n\n      if (localStorage.getItem('isLoggedin') == 'true') {\n        this.loggedInUserName = localStorage.getItem('userName'); //loading group data at page load\n\n        this.loadGroups(); // this.bindDataGridALLRecords('000080000014','TM02')\n      } else {\n        this.notificationMessages.errorToastr('Session logged out!! Please login again!!');\n        this.router.navigate(['/login']);\n      }\n    }\n\n    ngOnInit() {}\n\n    onEnter() {\n      this.findDB();\n    }\n\n    onOptionsSelectedGroup(event) {\n      this.optionSelectedGroup = event;\n      this.loadWorkCenter(event);\n    }\n\n    loadGroups() {\n      this.dashboardservice.GetGroups().subscribe(groupsData => {\n        this.groups = groupsData;\n      });\n    }\n\n    onOptionsSelectedWorkCenter(event) {\n      this.optionSelectedWorkCenter = event;\n    }\n\n    loadWorkCenter(group) {\n      console.log('group', group);\n      this.dashboardservice.GetWorkCenter(group).subscribe(workCenterData => {\n        this.workCenter = workCenterData;\n      });\n    }\n\n    onOptionsSelectedShift(event) {\n      this.optionSelectedShift = event;\n    }\n\n    clearText() {\n      this.txtweightinton = '';\n      this.txttotalsetup = '';\n      this.txttotaloptions = '';\n      this.txttheortime = '';\n    } // pddetails: any[] = [];\n    // bindDataGridALLRecords(mirno: string, plantCode: string) {\n    //   this.dashboardservice.bindDataGridALLRecords(mirno, plantCode).subscribe(productionData => {\n    //     this.pddetails = productionData;\n    //     console.log(this.pddetails);\n    //   });\n    // }\n\n\n    findDB() {\n      this.waitSpinner = false;\n      this.showSpinner = true;\n      this.txtAckMirno = this.txtAckMirno.padStart(12, '0');\n      this.clearText();\n\n      if (isNumeric(this.txtAckMirno) != true) {\n        this.notificationMessages.errorToastr(\"Enter correct Numeric MIR Number\");\n        this.waitSpinner = true;\n        this.showSpinner = false;\n        return;\n      }\n\n      this.section1 = this.txtAckMirno;\n      this.section1 = this.section1.substring(0, this.section1.length - (this.section1.length - 1));\n      console.log(typeof this.section1);\n\n      if (this.section1 != 0) {\n        this.waitSpinner = true;\n        this.showSpinner = false;\n        this.notificationMessages.errorToastr(\"Enter valid MIR number\");\n        return;\n      }\n\n      this.dashboardservice.getBpByMirno(this.txtAckMirno).subscribe(data => {\n        var bp1 = data;\n\n        if (bp1 != this.section1) {\n          this.waitSpinner = true;\n          this.showSpinner = false;\n          this.notificationMessages.errorToastr(\"MIR \" + this.txtAckMirno + \" is from \" + data + \" Plant\");\n          return;\n        }\n      });\n      var strconfirm = confirm(\"MIR Number \" + this.txtAckMirno + \" Already Added in Shoplink:Do you want to add missing Production Orders?\");\n\n      if (strconfirm == true) {\n        this.dashboardservice.findDB(this.txtAckMirno).subscribe(data => {\n          console.log('data', data);\n\n          if (0 != null) {} else {\n            this.waitSpinner = true;\n            this.showSpinner = false;\n            this.notificationMessages.errorToastr('Added!!');\n            return;\n          }\n        });\n      } else {}\n    }\n\n    onSearchClick() {\n      this.waitSpinner = false;\n      this.showSpinner = true;\n      this.clearText();\n      this.txtAckMirno = this.txtAckMirno.padStart(12, '0');\n      this.dashboardservice.bindDataGridALLRecords(this.txtAckMirno, this.plantCode, this.poType = '').subscribe(result => {\n        this.pddetails = result;\n\n        if (this.pddetails.length == 0 || this.pddetails == null) {\n          this.notificationMessages.errorToastr(\"MIR \" + this.txtAckMirno + \" not available in SHOPlink database\");\n          return;\n        }\n\n        this.dashboardservice.getCalculations(this.txtAckMirno, this.plantCode, this.poType = '').subscribe(result => {\n          this.txtweightinton = result[0].totalWheight;\n          this.txttotalsetup = result[0].rSno;\n          this.txttotaloptions = result[0].totalOpns;\n          this.txttheortime = result[0].runTime;\n        });\n      });\n      this.waitSpinner = true;\n      this.showSpinner = false;\n    }\n\n    releasePO() {\n      this.dashboardservice.releasePO(this.txtAckMirno, this.plantCode).subscribe(result => {\n        var totalPO = result.totalPO;\n        var releasedPO = result.releasedPO;\n        var totalreleased = result.totalreleased;\n\n        if (releasedPO > 0) {\n          this.dashboardservice.getCalculations(this.txtAckMirno, this.plantCode, this.poType = 'Primary').subscribe(result => {\n            this.txtweightinton = result[0].totalWheight;\n            this.txttotalsetup = result[0].rSno;\n            this.txttotaloptions = result[0].totalOpns;\n            this.txttheortime = result[0].runTime;\n          });\n          this.dashboardservice.bindDataGridALLRecords(this.txtAckMirno, this.plantCode, this.poType = 'Primary').subscribe(result => {\n            this.pddetails = result;\n          });\n          var compltedPO = releasedPO + totalreleased;\n          if (totalPO != releasedPO + totalreleased) alert(totalPO - releasedPO + \" Workorders are pending for release. Please repeat the process to release pending workorders\");else alert(\"Total \" + compltedPO + \" Production Orders are Released out of \" + totalPO + \", MIR No: \" + this.txtAckMirno);\n          this.txtAckMirno = \"\";\n        }\n      });\n    }\n\n    onAckmirClick() {\n      this.clearText();\n      this.waitSpinner = false;\n      this.showSpinner = true;\n      this.txtAckMirno = this.txtAckMirno.padStart(12, '0');\n\n      if (isNumeric(this.txtAckMirno) != true) {\n        this.notificationMessages.errorToastr(\"Enter correct Numeric MIR Number\");\n        this.waitSpinner = true;\n        this.showSpinner = false;\n        return;\n      }\n\n      this.dashboardservice.getOperationsByMirno(this.txtAckMirno).subscribe(result => {\n        if (result[0].length > 0) {\n          var flag_Ack = result[0].flag_Ack;\n          var bp = result[0].bp;\n\n          if (bp != this.plantCode) {\n            this.notificationMessages.errorToastr(\"MIR \" + this.txtAckMirno + \" is from \" + bp + \" Plant. Cannot change WorkCenter\");\n            this.waitSpinner = true;\n            this.showSpinner = false;\n            return;\n          }\n\n          if (flag_Ack == 'TRUE') {\n            this.dashboardservice.gettotalWO_Totalreleased(this.txtAckMirno).subscribe(result => {\n              if (result == true) {\n                var strconfirm = confirm(\"All Workorders are not released in MIR: \" + this.txtAckMirno + \", Do you want to release the pending workorders?\");\n\n                if (strconfirm == true) {\n                  this.releasePO();\n                } else {\n                  this.waitSpinner = true;\n                  this.showSpinner = false;\n                  return;\n                }\n              } else {\n                var strconfirm = confirm(\"All Workorders are released in MIR: \" + this.txtAckMirno + \",  Do you want to repeate the releasing Process?\");\n\n                if (strconfirm == true) {\n                  this.releasePO();\n                } else {\n                  this.waitSpinner = true;\n                  this.showSpinner = false;\n                  return;\n                }\n              }\n            });\n          }\n        } else {\n          alert(\"MIR is not available Shoplink database\");\n        }\n      });\n    }\n\n    onAckPOclick() {\n      this.waitSpinner = false;\n      this.showSpinner = true;\n      this.txtAckMirno = this.txtAckMirno.padStart(12, '0');\n\n      if (isNumeric(this.txtAckMirno) != true) {\n        this.notificationMessages.errorToastr(\"Enter correct Numeric Production Order Number\");\n        this.waitSpinner = true;\n        this.showSpinner = false;\n        return;\n      }\n\n      this.dashboardservice.ackPO(this.txtAckMirno).subscribe(result => {\n        this.notificationMessages.errorToastr(result);\n        this.waitSpinner = true;\n        this.showSpinner = false;\n        return;\n      });\n    }\n\n    allocate() {\n      this.clearText();\n      this.waitSpinner = false;\n      this.showSpinner = true;\n      this.txtAckMirno = this.txtAckMirno.padStart(12, '0');\n\n      if (isNumeric(this.txtAckMirno) != true) {\n        this.notificationMessages.errorToastr(\"Enter correct Numeric MIR Number\");\n        this.waitSpinner = true;\n        this.showSpinner = false;\n        return;\n      }\n\n      if (this.txtAckMirno.length != 12) {\n        this.notificationMessages.errorToastr(\"Enter correct MIR Number\");\n        return;\n      }\n\n      this.section1 = this.txtAckMirno;\n      this.section1 = this.section1.substring(0, this.section1.length - (this.section1.length - 1));\n\n      if (this.section1 != 0) {\n        this.waitSpinner = true;\n        this.showSpinner = false;\n        this.notificationMessages.errorToastr(\"Enter valid MIR number\");\n        return;\n      }\n\n      var txtRack = \"\";\n      this.dashboardservice.allocate(this.txtAckMirno, this.plantCode, this.optionSelectedGroup, this.optionSelectedWorkCenter, this.optionSelectedShift, txtRack).subscribe(result => {\n        alert(result);\n        this.dashboardservice.bindDataGridAfterAllocate(this.txtAckMirno, this.plantCode).subscribe(result => {\n          this.pddetails = result;\n        });\n        this.dashboardservice.getCalculationsAfterAllocate(this.txtAckMirno, this.plantCode).subscribe(calresult => {\n          this.txtweightinton = calresult[0].totalWheight;\n          this.txttotalsetup = calresult[0].rSno;\n          this.txttotaloptions = calresult[0].totalOpns;\n          this.txttheortime = calresult[0].runTime;\n        });\n        this.waitSpinner = true;\n        this.showSpinner = false;\n      });\n    }\n\n    onEnterPlanMIR() {\n      this.allocate();\n    }\n\n    onAssignClick() {\n      this.allocate();\n    }\n\n    onMassUpdateClick() {\n      this.notificationMessages.errorToastr(\"Work in progress\");\n      return;\n    }\n\n    onDeleteMIRClick() {\n      this.waitSpinner = false;\n      this.showSpinner = true;\n\n      if (isNumeric(this.txtAckMirno) != true) {\n        this.notificationMessages.errorToastr(\"Enter correct Numeric MIR Number\");\n        this.waitSpinner = true;\n        this.showSpinner = false;\n        return;\n      }\n\n      if (this.txtAckMirno != \"\") {\n        var strconfirm = confirm(\"Are you sure you want to delete record?\");\n\n        if (strconfirm == true) {\n          var query = \"delete from Operations where Mirno='\" + this.txtAckMirno + \"' and MachineName is null\";\n          this.dashboardservice.insertUpdateDelete(query).subscribe(result => {\n            if (result == 'true') {\n              this.notificationMessages.successToastr(\"Record deleted successfully\");\n            } else {\n              this.notificationMessages.errorToastr(\"MIR is Allocated to Machine First Deallocate then delete MIR\");\n            }\n          });\n          this.dashboardservice.bindDataGridALLRecords(this.txtAckMirno, this.plantCode, this.poType = '').subscribe(result => {\n            this.pddetails = result;\n          });\n          this.waitSpinner = true;\n          this.showSpinner = false;\n        } else {\n          this.waitSpinner = true;\n          this.showSpinner = false;\n          return;\n        }\n      } else {\n        this.waitSpinner = true;\n        this.showSpinner = false;\n        this.notificationMessages.errorToastr(\"MIR should not be blank\");\n        return;\n      }\n    }\n\n    onMainScreenClick() {\n      this.waitSpinner = false;\n      this.showSpinner = true;\n      this.dashboardservice.bindDataGridALLRecords(this.txtAckMirno, this.plantCode, this.poType = '').subscribe(result => {\n        this.pddetails = result;\n        this.waitSpinner = true;\n        this.showSpinner = false;\n      });\n    }\n\n    onRadiobuttonClick(flag) {\n      if (flag == 1) {\n        this.rdrFicep = true;\n        this.rdrVernet = false;\n        this.rdrDrilling = false;\n      }\n\n      if (flag == 2) {\n        this.rdrFicep = false;\n        this.rdrVernet = true;\n        this.rdrDrilling = false;\n      }\n\n      if (flag == 3) {\n        this.rdrFicep = false;\n        this.rdrVernet = false;\n        this.rdrDrilling = true;\n      }\n    }\n\n    onLoadScreenClick() {\n      this.clearText();\n\n      if (this.rdrFicep == false && this.rdrVernet == false && this.rdrDrilling == false) {\n        this.notificationMessages.errorToastr(\"Please select machine type 1. FICEP 2. VERNET 3. DRILLING\");\n        return;\n      }\n\n      if (this.txtAckMirno != \"\") {\n        this.dashboardservice.onLoadScreen(this.txtAckMirno, this.rdrFicep, this.rdrVernet, this.rdrDrilling).subscribe(result => {\n          this.txtweightinton = result[0].totalWheight;\n          this.txttotalsetup = result[0].rSno;\n          this.txttotaloptions = result[0].totalOpns;\n          this.txttheortime = result[0].runTime;\n        });\n      } else {\n        this.dashboardservice.totweight1(this.txtAckMirno).subscribe(result => {\n          if (result != \"\") {\n            this.txtweightinton = result[0].totalWheight;\n            this.txttotalsetup = result[0].rSno;\n            this.txttotaloptions = result[0].totalOpns;\n            this.txttheortime = result[0].runTime;\n          }\n        });\n      }\n\n      this.waitSpinner = true;\n      this.showSpinner = false;\n    }\n\n    onBalPunchMIRClick() {\n      var dateTimePicker1 = Date.now();\n      this.dashboardservice.onBalPunchMIR(dateTimePicker1.toString()).subscribe(result => {\n        if (result != \"\") {\n          this.txtweightinton = result[0].totalWheight;\n          this.txttotalsetup = result[0].rSno;\n          this.txttotaloptions = result[0].totalOpns;\n          this.txttheortime = result[0].runTime;\n        }\n\n        this.dashboardservice.bindDataGridOnPunchMIR(this.plantCode, dateTimePicker1.toString()).subscribe(result => {\n          this.pddetails = result;\n        });\n      });\n    }\n\n    onDeleteMIRLeftClick() {\n      this.waitSpinner = false;\n      this.showSpinner = true;\n      this.clearText();\n\n      if (isNumeric(this.txtAckMirno) != true) {\n        this.notificationMessages.errorToastr(\"Enter correct Numeric MIR Number\");\n        this.waitSpinner = true;\n        this.showSpinner = false;\n        return;\n      }\n\n      this.dashboardservice.getOperationsByMirno(this.txtAckMirno).subscribe(result => {\n        if (result[0].length > 0) {\n          var flag_Ack = result[0].flag_Ack;\n        } else {\n          this.notificationMessages.errorToastr(\"Data is not Available in SHOPLink\");\n          return;\n        }\n\n        if (this.txtAckMirno != \"\") {\n          var strconfirm = confirm(\"Are you sure you want to delete record?\");\n\n          if (strconfirm == true) {\n            var query = \"delete from Operations where Mirno='\" + this.txtAckMirno + \"' \";\n            this.dashboardservice.insertUpdateDelete(query).subscribe(result => {\n              if (result == 'true') {\n                this.notificationMessages.successToastr(\"Record deleted successfully\");\n              } else {\n                this.notificationMessages.errorToastr(\"Ooops problem occured while deleting records.!\");\n              }\n            });\n            this.dashboardservice.bindDataGridALLRecords(this.txtAckMirno, this.plantCode, this.poType = '').subscribe(result => {\n              this.pddetails = result;\n            });\n            this.waitSpinner = true;\n            this.showSpinner = false;\n          } else {\n            this.waitSpinner = true;\n            this.showSpinner = false;\n            return;\n          }\n        } else {\n          this.waitSpinner = true;\n          this.showSpinner = false;\n          this.notificationMessages.errorToastr(\"MIR should not be blank\");\n          return;\n        }\n      });\n    }\n\n    onBalAllocateClick() {\n      var dateTimePicker1 = Date.now();\n      this.dashboardservice.onBalAllocateMIR().subscribe(result => {\n        if (result != \"\") {\n          this.txtweightinton = result[0].totalWheight;\n          this.txttotalsetup = result[0].rSno;\n          this.txttotaloptions = result[0].totalOpns;\n          this.txttheortime = result[0].runTime;\n        }\n\n        this.dashboardservice.bindDataGridOnAllocateMIR(this.plantCode).subscribe(result => {\n          this.pddetails = result;\n        });\n      });\n    }\n\n    radioButton1Click(flag) {\n      if (flag == 1) {\n        this.radioButton1 = true;\n        this.dashboardservice.bindDataGridOnradioButton1(this.plantCode).subscribe(result => {\n          this.pddetails = result;\n        });\n      }\n\n      if (flag == 2) {\n        this.radioButton2 = true;\n        this.pddetails = [];\n      }\n    }\n\n    onExportToExcelClick() {\n      this.notificationMessages.errorToastr(\"Work in progress\");\n    }\n\n    onShop1() {}\n\n    onButton1click() {\n      this.notificationMessages.errorToastr(\"Work in progress\");\n    }\n\n    triggerModal(content) {\n      this.modalService.open(content, {\n        ariaLabelledBy: 'modal-basic-title',\n        size: 'xl',\n        backdrop: 'static'\n      }).result.then(res => {\n        this.closeModal = `Closed with: ${res}`;\n      }, res => {\n        this.closeModal = `Dismissed ${this.getDismissReason(res)}`;\n      });\n    }\n\n    getDismissReason(reason) {\n      if (reason === ModalDismissReasons.ESC) {\n        return 'by pressing ESC';\n      } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n        return 'by clicking on a backdrop';\n      } else {\n        return `with: ${reason}`;\n      }\n    }\n\n    refresh() {\n      // this.router.navigate(['/dashboard']);\n      window.location.reload();\n    }\n\n  }\n\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.NgbModal), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.DashboardService), i0.ɵɵdirectiveInject(i5.ToastrManager));\n  };\n\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 206,\n    vars: 24,\n    consts: [[1, \"row\"], [1, \"col-lg-8\"], [1, \"container\", \"my-4\"], [1, \"form-group\", \"row\"], [1, \"col-sm-12\", \"text-center\"], [1, \"fw-bold\"], [1, \"form-group\", \"row\", 2, \"font-size\", \"14px\"], [\"for\", \"lblAckIMR\", 1, \"col-sm-2\", \"col-form-label\"], [1, \"col-sm-2\"], [\"type\", \"text\", \"placeholder\", \"Ack.MIR\", \"id\", \"txtAckMirno\", 1, \"btn-sm\", \"form-control\", 3, \"ngModel\", \"keyup.enter\", \"ngModelChange\"], [1, \"col-sm-4\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-danger\", 2, \"font-size\", \"12px\", 3, \"click\"], [1, \"fa\", \"fa-search\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-primary\", 2, \"font-size\", \"12px\", 3, \"click\"], [1, \"fa\", \"fa-tasks\"], [1, \"fa\", \"fa-edit\"], [\"type\", \"radio\", \"name\", \"optradio\", 3, \"checked\", \"click\"], [1, \"form-row\", 2, \"font-size\", \"14px\"], [1, \"col-md-2\", \"mb-3\"], [\"for\", \"validationCustom01\"], [\"type\", \"text\", \"id\", \"validationCustom01\", \"placeholder\", \"Plan MIR\", 1, \"form-control\", \"btn-sm\", 3, \"keyup.enter\"], [\"id\", \"ddlSectionTypeGroup\", 1, \"custom-select\", \"custom-select-sm\", 2, \"width\", \"120px\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"value\", \"null\"], [\"class\", \"option\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"validationCustom001\"], [\"id\", \"ddlSectionTypeWorkCenter\", 1, \"custom-select\", \"custom-select-sm\", 2, \"width\", \"100px\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"class\", \"option\", 3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"validationCustom0001\"], [\"id\", \"ddlSectionType\", 1, \"custom-select\", \"custom-select-sm\", 2, \"width\", \"120px\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [1, \"col-md-4\", \"mb-3\"], [1, \"text-center\"], [\"type\", \"button\", \"id\", \"btnAssign\", 1, \"btn\", \"btn-sm\", \"btn-secondary\", \"btn-md\", 2, \"font-size\", \"12px\", 3, \"click\"], [1, \"fa\", \"fa-pencil-square-o\"], [\"type\", \"button\", \"id\", \"btnMassUpdate\", 1, \"btn\", \"btn-sm\", \"btn-secondary\", \"btn-md\", 2, \"font-size\", \"12px\", 3, \"click\"], [1, \"fa\", \"fa-pencil\"], [\"type\", \"button\", \"id\", \"btnMIRDelete\", 1, \"btn\", \"btn-sm\", \"btn-secondary\", \"btn-md\", 2, \"font-size\", \"12px\", 3, \"click\"], [1, \"fa\", \"fa-trash\"], [1, \"form-group\", \"row\", 2, \"background-color\", \"#F4F5F1\", \"height\", \"35px\", \"font-size\", \"14px\", \"border\", \"1px solid #d7e4b2\"], [\"type\", \"radio\", \"name\", \"radioButton1\", 3, \"checked\", \"click\"], [1, \"col-sm-8\"], [\"type\", \"date\", \"id\", \"start\", \"name\", \"trip-start\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-secondary\", \"btn-md\", 2, \"font-size\", \"12px\", 3, \"click\"], [1, \"fa\", \"fa-file-excel-o\"], [1, \"fa\", \"fa-desktop\"], [1, \"col-lg-4\"], [1, \"container\", 2, \"background-color\", \"#F4F5F1\", \"font-size\", \"12px\", \"border\", \"1px solid #d7e4b2\"], [1, \"col\"], [\"type\", \"text\", \"id\", \"txtweightinton\", 1, \"btn-sm\", \"form-control\", 2, \"font-size\", \"large\", \"font-weight\", \"bold\", \"color\", \"rgb(64, 74, 223)\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"lblweightinton\", 1, \"col-form-label\"], [\"type\", \"text\", \"id\", \"txttotalsetup\", 1, \"btn-sm\", \"form-control\", 2, \"font-size\", \"large\", \"font-weight\", \"bold\", \"color\", \"rgb(64, 74, 223)\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"lbltotalsetup\", 1, \"col-form-label\"], [\"type\", \"text\", \"id\", \"txttotaloptions\", 1, \"btn-sm\", \"form-control\", 2, \"font-size\", \"large\", \"font-weight\", \"bold\", \"color\", \"rgb(64, 74, 223)\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"lbltotaloptions\", 1, \"col-form-label\"], [\"type\", \"text\", \"id\", \"txttheortime\", 1, \"btn-sm\", \"form-control\", 2, \"font-size\", \"large\", \"font-weight\", \"bold\", \"color\", \"rgb(64, 74, 223)\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"lbltheortime\", 1, \"col-form-label\"], [1, \"col-4\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-outline-secondary\", 2, \"font-size\", \"12px\", 3, \"click\"], [1, \"fa\", \"fa-upload\"], [1, \"fa\", \"fa-window-restore\"], [1, \"fa\", \"fa-window-maximize\"], [1, \"col-lg-12\"], [\"id\", \"tbldata\", 1, \"table\", \"table-bordered\"], [2, \"background-color\", \"#F4F5F1\", \"font-size\", \"12px\"], [\"style\", \"font-size: 12px;\", 4, \"ngIf\"], [1, \"option\", 3, \"value\"], [1, \"option\", 3, \"ngValue\"], [2, \"font-size\", \"12px\"], [\"class\", \"text-center\", 4, \"ngFor\", \"ngForOf\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelement(3, \"br\");\n        i0.ɵɵelement(4, \"br\");\n        i0.ɵɵelementStart(5, \"div\", 2);\n        i0.ɵɵelementStart(6, \"form\");\n        i0.ɵɵelementStart(7, \"div\", 3);\n        i0.ɵɵelementStart(8, \"div\", 4);\n        i0.ɵɵelementStart(9, \"h4\", 5);\n        i0.ɵɵtext(10, \"Shop Floor Panning Acknowledgement\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 6);\n        i0.ɵɵelementStart(12, \"label\", 7);\n        i0.ɵɵtext(13, \"Ack.MIR\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 8);\n        i0.ɵɵelementStart(15, \"input\", 9);\n        i0.ɵɵlistener(\"keyup.enter\", function DashboardComponent_Template_input_keyup_enter_15_listener() {\n          return ctx.onEnter();\n        })(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.txtAckMirno = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 10);\n        i0.ɵɵelementStart(17, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_17_listener() {\n          return ctx.onSearchClick();\n        });\n        i0.ɵɵelement(18, \"i\", 12);\n        i0.ɵɵtext(19, \" Search\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(20, \" \\u00A0 \");\n        i0.ɵɵelementStart(21, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_21_listener() {\n          return ctx.onAckmirClick();\n        });\n        i0.ɵɵelement(22, \"i\", 14);\n        i0.ɵɵtext(23, \" ACK.MIR\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(24, \"\\u00A0 \");\n        i0.ɵɵelementStart(25, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_25_listener() {\n          return ctx.onAckPOclick();\n        });\n        i0.ɵɵelement(26, \"i\", 15);\n        i0.ɵɵtext(27, \" ACK.PO\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 10);\n        i0.ɵɵelementStart(29, \"label\");\n        i0.ɵɵelementStart(30, \"input\", 16);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_input_click_30_listener() {\n          return ctx.onRadiobuttonClick(1);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(31, \" Ficep\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(32, \"\\u00A0 \");\n        i0.ɵɵelementStart(33, \"label\");\n        i0.ɵɵelementStart(34, \"input\", 16);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_input_click_34_listener() {\n          return ctx.onRadiobuttonClick(2);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(35, \" Vernet\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(36, \"\\u00A0 \");\n        i0.ɵɵelementStart(37, \"label\");\n        i0.ɵɵelementStart(38, \"input\", 16);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_input_click_38_listener() {\n          return ctx.onRadiobuttonClick(3);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(39, \" Drilling\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"div\", 17);\n        i0.ɵɵelementStart(41, \"div\", 18);\n        i0.ɵɵelementStart(42, \"label\", 19);\n        i0.ɵɵtext(43, \"Plan MIR \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"input\", 20);\n        i0.ɵɵlistener(\"keyup.enter\", function DashboardComponent_Template_input_keyup_enter_44_listener() {\n          return ctx.onEnterPlanMIR();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"div\", 18);\n        i0.ɵɵelementStart(46, \"label\", 19);\n        i0.ɵɵtext(47, \"Group \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"select\", 21);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_select_ngModelChange_48_listener($event) {\n          return ctx.optionSelectedGroup = $event;\n        })(\"ngModelChange\", function DashboardComponent_Template_select_ngModelChange_48_listener($event) {\n          return ctx.onOptionsSelectedGroup($event);\n        });\n        i0.ɵɵelementStart(49, \"option\", 22);\n        i0.ɵɵtext(50, \"--Select--\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(51, DashboardComponent_option_51_Template, 2, 2, \"option\", 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"div\", 18);\n        i0.ɵɵelementStart(53, \"label\", 24);\n        i0.ɵɵtext(54, \"Work Center \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"select\", 25);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_select_ngModelChange_55_listener($event) {\n          return ctx.optionSelectedWorkCenter = $event;\n        })(\"ngModelChange\", function DashboardComponent_Template_select_ngModelChange_55_listener($event) {\n          return ctx.onOptionsSelectedWorkCenter($event);\n        });\n        i0.ɵɵelementStart(56, \"option\", 22);\n        i0.ɵɵtext(57, \"--Select--\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(58, DashboardComponent_option_58_Template, 2, 2, \"option\", 26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(59, \"div\", 18);\n        i0.ɵɵelementStart(60, \"label\", 27);\n        i0.ɵɵtext(61, \"Shift\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"select\", 28);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_select_ngModelChange_62_listener($event) {\n          return ctx.optionSelectedShift = $event;\n        })(\"ngModelChange\", function DashboardComponent_Template_select_ngModelChange_62_listener($event) {\n          return ctx.onOptionsSelectedShift($event);\n        });\n        i0.ɵɵelementStart(63, \"option\", 22);\n        i0.ɵɵtext(64, \"--Select--\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(65, DashboardComponent_option_65_Template, 2, 2, \"option\", 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(66, \"div\", 29);\n        i0.ɵɵelement(67, \"label\", 27);\n        i0.ɵɵelementStart(68, \"div\", 30);\n        i0.ɵɵelementStart(69, \"button\", 31);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_69_listener() {\n          return ctx.onAssignClick();\n        });\n        i0.ɵɵelement(70, \"i\", 32);\n        i0.ɵɵtext(71, \"Assign\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(72, \" \\u00A0\\u00A0 \");\n        i0.ɵɵelementStart(73, \"button\", 33);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_73_listener() {\n          return ctx.onMassUpdateClick();\n        });\n        i0.ɵɵelement(74, \"i\", 34);\n        i0.ɵɵtext(75, \"Mass Update\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(76, \" \\u00A0\\u00A0 \");\n        i0.ɵɵelementStart(77, \"button\", 35);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_77_listener() {\n          return ctx.onDeleteMIRClick();\n        });\n        i0.ɵɵelement(78, \"i\", 36);\n        i0.ɵɵtext(79, \"Delete MIR\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(80, \"div\", 37);\n        i0.ɵɵelementStart(81, \"div\", 10);\n        i0.ɵɵelementStart(82, \"label\");\n        i0.ɵɵelementStart(83, \"input\", 38);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_input_click_83_listener() {\n          return ctx.radioButton1Click(1);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(84, \" In Process WIP\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(85, \"\\u00A0 \");\n        i0.ɵɵelementStart(86, \"label\");\n        i0.ɵɵelementStart(87, \"input\", 38);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_input_click_87_listener() {\n          return ctx.radioButton1Click(2);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(88, \" Incom. Quantity\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(89, \"\\u00A0 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(90, \"div\", 39);\n        i0.ɵɵelement(91, \"input\", 40);\n        i0.ɵɵtext(92, \" \\u00A0 \\u00A0 \");\n        i0.ɵɵelementStart(93, \"button\", 41);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_93_listener() {\n          return ctx.onExportToExcelClick();\n        });\n        i0.ɵɵelement(94, \"i\", 42);\n        i0.ɵɵtext(95, \" Export To Excel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(96, \" \\u00A0 \\u00A0 \");\n        i0.ɵɵelementStart(97, \"button\", 41);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_97_listener() {\n          return ctx.onShop1();\n        });\n        i0.ɵɵelement(98, \"i\", 43);\n        i0.ɵɵtext(99, \" Shop 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(100, \" \\u00A0 \\u00A0 \");\n        i0.ɵɵelementStart(101, \"button\", 41);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_101_listener() {\n          return ctx.onButton1click();\n        });\n        i0.ɵɵelement(102, \"i\", 43);\n        i0.ɵɵtext(103, \" IWC (Shop 2-11)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(104, \"hr\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(105, \"div\", 44);\n        i0.ɵɵelement(106, \"br\");\n        i0.ɵɵelement(107, \"br\");\n        i0.ɵɵelement(108, \"br\");\n        i0.ɵɵelementStart(109, \"div\", 45);\n        i0.ɵɵelementStart(110, \"div\", 0);\n        i0.ɵɵelementStart(111, \"div\", 46);\n        i0.ɵɵelementStart(112, \"div\", 0);\n        i0.ɵɵelementStart(113, \"div\", 46);\n        i0.ɵɵelementStart(114, \"input\", 47);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_114_listener($event) {\n          return ctx.txtweightinton = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(115, \"div\", 46);\n        i0.ɵɵelementStart(116, \"label\", 48);\n        i0.ɵɵtext(117, \"Weight(in Ton)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(118, \"div\", 46);\n        i0.ɵɵelementStart(119, \"input\", 49);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_119_listener($event) {\n          return ctx.txttotalsetup = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(120, \"div\", 46);\n        i0.ɵɵelementStart(121, \"label\", 50);\n        i0.ɵɵtext(122, \"Total Setup\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(123, \"div\", 0);\n        i0.ɵɵelementStart(124, \"div\", 46);\n        i0.ɵɵelementStart(125, \"input\", 51);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_125_listener($event) {\n          return ctx.txttotaloptions = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(126, \"div\", 46);\n        i0.ɵɵelementStart(127, \"label\", 52);\n        i0.ɵɵtext(128, \"Total Optns\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(129, \"div\", 46);\n        i0.ɵɵelementStart(130, \"input\", 53);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_130_listener($event) {\n          return ctx.txttheortime = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(131, \"div\", 46);\n        i0.ɵɵelementStart(132, \"label\", 54);\n        i0.ɵɵtext(133, \"Theor.Runtime\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(134, \"\\u00A0 \");\n        i0.ɵɵelementStart(135, \"div\", 0);\n        i0.ɵɵelementStart(136, \"div\", 46);\n        i0.ɵɵelementStart(137, \"div\", 0);\n        i0.ɵɵelementStart(138, \"div\", 55);\n        i0.ɵɵelementStart(139, \"button\", 56);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_139_listener() {\n          return ctx.onMainScreenClick();\n        });\n        i0.ɵɵelement(140, \"i\", 43);\n        i0.ɵɵtext(141, \" Main Screen\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(142, \"div\", 55);\n        i0.ɵɵelementStart(143, \"button\", 56);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_143_listener() {\n          return ctx.onLoadScreenClick();\n        });\n        i0.ɵɵelement(144, \"i\", 57);\n        i0.ɵɵtext(145, \" WC Load\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(146, \" \\u00A0 \");\n        i0.ɵɵelementStart(147, \"div\", 0);\n        i0.ɵɵelementStart(148, \"div\", 55);\n        i0.ɵɵelementStart(149, \"button\", 56);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_149_listener() {\n          return ctx.onBalPunchMIRClick();\n        });\n        i0.ɵɵelement(150, \"i\", 58);\n        i0.ɵɵtext(151, \" Bal.Punch MIR\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(152, \"div\", 55);\n        i0.ɵɵelementStart(153, \"button\", 56);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_153_listener() {\n          return ctx.onBalAllocateClick();\n        });\n        i0.ɵɵelement(154, \"i\", 59);\n        i0.ɵɵtext(155, \" Bal_Allocate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(156, \" \\u00A0 \");\n        i0.ɵɵelementStart(157, \"div\", 0);\n        i0.ɵɵelementStart(158, \"div\", 55);\n        i0.ɵɵelementStart(159, \"button\", 56);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_159_listener() {\n          return ctx.onDeleteMIRLeftClick();\n        });\n        i0.ɵɵelement(160, \"i\", 36);\n        i0.ɵɵtext(161, \" Delete MIR\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(162, \"div\", 0);\n        i0.ɵɵelementStart(163, \"div\", 60);\n        i0.ɵɵelementStart(164, \"table\", 61);\n        i0.ɵɵelementStart(165, \"thead\", 62);\n        i0.ɵɵelementStart(166, \"tr\", 30);\n        i0.ɵɵelementStart(167, \"th\");\n        i0.ɵɵtext(168, \"PO.NO.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(169, \"th\");\n        i0.ɵɵtext(170, \"Item No\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(171, \"th\");\n        i0.ɵɵtext(172, \"MIR No\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(173, \"th\");\n        i0.ɵɵtext(174, \"WorkCenter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(175, \"th\");\n        i0.ɵɵtext(176, \"Section\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(177, \"th\");\n        i0.ɵɵtext(178, \"OPStatus\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(179, \"th\");\n        i0.ɵɵtext(180, \"Billable Lot\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(181, \"th\");\n        i0.ɵɵtext(182, \"QTY\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(183, \"th\");\n        i0.ɵɵtext(184, \"Length\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(185, \"th\");\n        i0.ɵɵtext(186, \"Wt./Pcs.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(187, \"th\");\n        i0.ɵɵtext(188, \"Released Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(189, \"th\");\n        i0.ɵɵtext(190, \"Total Wt\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(191, \"th\");\n        i0.ɵɵtext(192, \"Rack Details\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(193, \"th\");\n        i0.ɵɵtext(194, \"OPR/PCs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(195, \"th\");\n        i0.ɵɵtext(196, \"Tot OPS\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(197, \"th\");\n        i0.ɵɵtext(198, \"Planning Shift\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(199, \"th\");\n        i0.ɵɵtext(200, \"Planning Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(201, \"th\");\n        i0.ɵɵtext(202, \"RunTime\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(203, \"th\");\n        i0.ɵɵtext(204, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(205, DashboardComponent_tbody_205_Template, 2, 1, \"tbody\", 63);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"@routerTransition\", undefined);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngModel\", ctx.txtAckMirno);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"checked\", ctx.rdrFicep);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"checked\", ctx.rdrVernet);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"checked\", ctx.rdrDrilling);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.optionSelectedGroup)(\"ngModelOptions\", i0.ɵɵpureFunction0(21, _c0));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.groups);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.optionSelectedWorkCenter)(\"ngModelOptions\", i0.ɵɵpureFunction0(22, _c0));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.workCenter);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.optionSelectedShift)(\"ngModelOptions\", i0.ɵɵpureFunction0(23, _c0));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.SECTION_TYPE);\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"checked\", ctx.radioButton1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"checked\", ctx.radioButton2);\n        i0.ɵɵadvance(27);\n        i0.ɵɵproperty(\"ngModel\", ctx.txtweightinton);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.txttotalsetup);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.txttotaloptions);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.txttheortime);\n        i0.ɵɵadvance(75);\n        i0.ɵɵproperty(\"ngIf\", ctx.pddetails.length > 0);\n      }\n    },\n    directives: [i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.NgForm, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgModel, i6.SelectControlValueAccessor, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i7.NgForOf, i7.NgIf],\n    styles: [\"\"],\n    data: {\n      animation: [routerTransition()]\n    }\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}