{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { Http } from '@angular/http';\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport * as glob from '../models/global';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/http\";\nexport let UsermasterService = /*#__PURE__*/(() => {\n  class UsermasterService {\n    constructor(http, httpd) {\n      this.http = http;\n      this.httpd = httpd;\n    }\n\n    UserLogin(userId, userPassword) {\n      return this.httpd.get(glob.devApiUrl + \"Login/UserLogin\", {\n        params: {\n          UserId: userId,\n          UserPassword: userPassword\n        }\n      }).pipe(map(response => {\n        return response.json();\n      }), // catchError((error: Response) => {\n      //   return \"net::ERR_CONNECTION_REFUSED\"\n      // }),\n      catchError(this.handleError)), catchError(err => {\n        throw new Error(\"My Error\");\n      });\n    }\n\n    handleError(error) {\n      console.log(\"error\", error); // window.alert(error)\n\n      return throwError(error);\n    }\n\n  }\n\n  UsermasterService.ɵfac = function UsermasterService_Factory(t) {\n    return new (t || UsermasterService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Http));\n  };\n\n  UsermasterService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsermasterService,\n    factory: UsermasterService.ɵfac,\n    providedIn: 'root'\n  });\n  return UsermasterService;\n})();","map":null,"metadata":{},"sourceType":"module"}